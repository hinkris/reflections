What happens when you initialize a repository? Why do you need to do it?

When we initialize the git hidden files that contian the structure of the folder gets created so that 
things can be tracked. We need to do it so that git can be explicitely created i guess?

How is the staging area different from the working directory and the repository? What value do you think it offers?

The working directory is the place in the file system i think while the staging area exists only virtually until
the commit is done. The repository also exists in the git file probably but is the name of the entire thing and 
more permanent. 

How can you use the staging area to make sure you have one commit per logical change?

when there's a change u can add it to the staging area and then
commit it if need be?

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you are making changes to earlier answers but also want the earlier answer intact then branches would help i think. 
Because making changes to earlier branches means that the program will go in a different direction entirely so we need
branches to keep all possible "routes" available. 

How do the diagrams help you visualize the branch structure?

they help because even otherwise we would visualize this pictorially i guess but doing it helps to solidify the understanding. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

result is to bring together logical changes from both branches 
that may be needed for going forward with the development of the
program.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging is not able to resolve all conflicts by itself. Because Git isnt intelligent enough to know what the effect of
including one change in code from one user versus another change in code from another user in the other branch is. Manual
intervention would be beneficial in this case to make sure the
merging doesnt cause problems from naively merging two branches
but rather ensuring the final merge works with all changes incorporated. 
How did viewing a diff between two versions of a file help you see the bug that was introduced?

I think that because the answers about which parts differed are clearly visible then it
was easy for me to check out the difference and find it out without a bother. 
Also, the computer doing it meant I don't need to parse each and every word of both the
files to find a difference. 

How could having easy access to the entire history of a file make you a more efficient programmer
 in the long term?

Hmmm...it will definitely help. Because once iv completed a project, I can go back and see where 
I have got stuck and improve on that aspect. Also sometimes when I've done something correctly and
changed to a wrong version in the future, I can go back and reuse the correct part without redoing it.



What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google docs does?

Hmm when doing commits in Git manually we know what we are doing. We know that a commit is needed for a reason
but Google docs may not know when to commit to make the workflow the easiest so Git is probably better. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?

It's useful because in coding many files are interconnected so changes will be to many files and connected logically
so we need a system to track them all at once. 


How can you use the commands git log and git diff to view the history of files?

we can use log to see what each commmit contains. And we can see the git diff to see what all changes have been made 
to the file at various points and the differences between them. 

How might using version control make you more confident to make changes that could break something?

A lot more confident beacuse then I could revert back by using the Git checkout "commit id" command and go back to 
a previous bug free version. :D






